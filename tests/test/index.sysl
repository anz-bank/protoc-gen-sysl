
Foo:
    @description = ""
    @package = "grpctesting"
    Foobar(input <: grpctesting.StreamingOutputCallRequest):
        @description = ""
        return ok <: grpctesting.StreamingOutputCallResponse

StreamingOutputCallRequest:
    Foobar:
        ...

TestService:
    @description =:
        | A simple service to test the various types of RPCs and experiment with
        | performance with various types of payload.
        | One empty request followed by one empty response.
        |    rpc EmptyCall(Empty) returns (Empty);
    @package = "grpctesting"
    FullDuplexCall(input <: grpctesting.StreamingOutputCallRequest):
        @description =:
            | A sequence of requests with each request served by the server immediately.
            | As one request could lead to multiple responses, this interface
            | demonstrates the idea of full duplexing.
        return ok <: grpctesting.StreamingOutputCallResponse
    HalfDuplexCall(input <: grpctesting.StreamingOutputCallRequest):
        @description =:
            | A sequence of requests followed by a sequence of responses.
            | The server buffers all the client requests and then serves them in order. A
            | stream of responses are returned to the client when the server starts with
            | first request.
        return ok <: grpctesting.StreamingOutputCallResponse
    StreamingInputCall(input <: grpctesting.StreamingInputCallRequest):
        @description =:
            | A sequence of requests followed by one response (streamed upload).
            | The server returns the aggregated size of client payload as the result.
        return ok <: grpctesting.StreamingInputCallResponse
    StreamingOutputCall(input <: grpctesting.StreamingOutputCallRequest):
        @description =:
            | One request followed by a sequence of responses (streamed download).
            | The server returns the payload with client desired type and sizes.
        return ok <: grpctesting.StreamingOutputCallResponse
    UnaryCall(input <: grpctesting.SimpleRequest):
        @description =:
            | One request followed by one response.
            | The server returns the client payload as-is.
        StreamingOutputCallRequest <- Foobar
        return ok <: grpctesting.SimpleResponse

grpctesting:
    @package = "grpctesting"
    !type EchoStatus:
        @description =:
            | A protobuf representation for grpc status. This is used by test
            | clients to specify a status that the server should attempt to return.
        code <: int
        message <: string
    !enum GrpclbRouteType:
        GRPCLB_ROUTE_TYPE_BACKEND: 2
        GRPCLB_ROUTE_TYPE_FALLBACK: 1
        GRPCLB_ROUTE_TYPE_UNKNOWN: 0
    !type Payload:
        @description =:
            | A block of data, to simply increase gRPC message size.
        body <: bytes
        type <: grpctesting.PayloadType
    !enum PayloadType:
        COMPRESSABLE: 0
        RANDOM: 2
        UNCOMPRESSABLE: 1
    !type ResponseParameters:
        @description =:
            | Configuration for a particular response.
        interval_us <: int
        size <: int
    !type SimpleRequest:
        @description =:
            | Unary request.
        fill_grpclb_route_type <: bool
        fill_oauth_scope <: bool
        fill_server_id <: bool
        fill_username <: bool
        payload <: grpctesting.Payload
        response_size <: int
        response_status <: grpctesting.EchoStatus
        response_type <: grpctesting.PayloadType
    !type SimpleResponse:
        @description =:
            | Unary response, as configured by the request.
        grpclb_route_type <: grpctesting.GrpclbRouteType
        oauth_scope <: string
        payload <: grpctesting.Payload
        server_id <: string
        username <: string
    !type StreamingInputCallRequest:
        @description =:
            | Client-streaming request.
        payload <: grpctesting.Payload
    !type StreamingInputCallResponse:
        @description =:
            | Client-streaming response.
        aggregated_payload_size <: int
    !type StreamingOutputCallRequest:
        @description =:
            | Server-streaming request.
        payload <: grpctesting.Payload
        response_parameters <: sequence of grpctesting.ResponseParameters
        response_status <: grpctesting.EchoStatus
        response_type <: grpctesting.PayloadType
    !type StreamingOutputCallResponse:
        @description =:
            | Server-streaming response, as configured by the request and parameters.
        payload <: grpctesting.Payload
